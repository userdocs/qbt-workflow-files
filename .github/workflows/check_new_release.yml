name: check for new releases

on:
  workflow_dispatch:

jobs:
  check_release:
    runs-on: ubuntu-latest
    name: "Check for latest releases or tags"

    steps:
      - uses: actions/checkout@v3

      - name: bootstrap values
        run: |
          declare -A current_github_tag
          declare -A current_build_version

          current_github_tag[qbittorrent]="4.4.4.1"
          current_build_version[qbittorrent]="$(curl -sL https://api.github.com/repos/userdocs/qbittorrent-nox-static/releases/latest | jq -r '.body' | grep '|.*Qbittorrent.*|' | awk '{ print $4 }')"
          current_github_tag[qt5]="$(git ls-remote -q -t --refs https://github.com/qt/qtbase.git | awk '/v5(.*)-lts-lgpl/{sub("refs/tags/v", ""); print $2 }' | sed 's/-lts-lgpl//g' | awk '!/^$/' | sort -rV | head -n1)"
          current_build_version[qt5]="$(curl -sL https://api.github.com/repos/userdocs/qbittorrent-nox-static/releases/latest | jq -r '.body' | grep '|.*Qt5.*|' | awk '{ print $4 }')"
          current_github_tag[qt6]="$(git ls-remote -q -t --refs "https://github.com/qt/qtbase.git" | awk '/v6/{sub("refs/tags/v", ""); sub("(.*)(-[^0-9].*)(.*)", ""); print $2 }' | awk '!/^$/' | sort -rV | head -n1)"
          current_build_version[qt6]="$(curl -sL https://api.github.com/repos/userdocs/qbittorrent-nox-static/releases/latest | jq -r '.body' | grep '|.*Qt6.*|' | awk '{ print $4 }')"
          current_github_tag[libtorrent]="$(git ls-remote -q -t --refs "https://github.com/arvidn/libtorrent.git" | awk '/\/v2/{sub("refs/tags/v", "");sub("(.*)(-[^0-9].*)(.*)", ""); print $2 }' | awk '!/^$/' | sort -rV | head -n1)"
          current_build_version[libtorrent]="$(curl -sL https://api.github.com/repos/userdocs/qbittorrent-nox-static/releases/latest | jq -r '.body' | grep '|.*Libtorrent.*|' | awk '{ print $4 }')"
          current_github_tag[boost]="$(git ls-remote -q -t --refs https://github.com/boostorg/boost.git | awk '{sub("refs/tags/boost-", "");sub("(.*)(rc|alpha|beta)(.*)", ""); print $2 }' | awk '!/^$/' | sort -rV | head -n1)"
          current_build_version[boost]="$(curl -sL https://api.github.com/repos/userdocs/qbittorrent-nox-static/releases/latest | jq -r '.body' | grep '|.*Boost.*|' | awk '{ print $4 }')"
          current_github_tag[openssl]="$(git ls-remote -q -t --refs "https://github.com/openssl/openssl.git" | awk '/openssl/{sub("refs/tags/openssl-", "");sub("(.*)(v6|rc|alpha|beta)(.*)", ""); print $2 }' | awk '!/^$/' | sort -rV | head -n1)"
          current_build_version[openssl]="$(curl -sL https://api.github.com/repos/userdocs/qbittorrent-nox-static/releases/latest | jq -r '.body' | grep '|.*OpenSSL.*|' | awk '{ print $4 }')"

          for iray in "${!current_github_tag[@]}"; do
            if [[ "${current_github_tag[$iray]//\./}" -gt "${current_build_version[$iray]//\./}" ]]; then
              printf "%-11s latest:%-10s qbt-static-current:%-10s %s\n" "$iray" "${current_github_tag[$iray]}" "${current_build_version[$iray]}" "< New version available - workflow will be triggered"
              echo "trigger_workflow=yes" >> $GITHUB_ENV
            else
              printf "%-11s latest:%-10s qbt-static-current:%-10s\n" "$iray" "${current_github_tag[$iray]}" "${current_build_version[$iray]}"
            fi
          done

      - name: Repository Dispatch
        if: env.trigger_workflow == 'yes'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.MYTOKEN }}
          repository: ${{ github.repository }}
          event-type: check-for-new-releases
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

      - name: Wait for qbt download and release to finish
        if: env.trigger_workflow == 'yes'
        uses: lewagon/wait-on-check-action@v1.1.2
        with:
          ref: ${{ github.event.client_payload.sha }}
          repo-token: ${{ secrets.MYTOKEN }}
          check-name: "qbt download and release reusable files for workflows"
          running-workflow-name: "check for new releases"
          wait-interval: 10
          allowed-conclusions: success

      - name: Download updated qtb static dependencies
        if: env.trigger_workflow == 'yes'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: matrix multi build and release - qbt-workflow-files
          repo: userdocs/qbt_static_test
          token: ${{ secrets.MYTOKEN }}
